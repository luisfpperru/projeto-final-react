{
  "version": 3,
  "sources": ["../@material-ui/core/esm/Divider/Divider.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AACA;AACO,IAAI,SAAS,iBAAgB,OAAO;AACzC,SAAO;AAAA,IAEL,MAAM;AAAA,MACJ,QAAQ;AAAA,MACR,QAAQ;AAAA,MAER,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,iBAAiB,MAAM,QAAQ;AAAA;AAAA,IAIjC,UAAU;AAAA,MACR,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA;AAAA,IAIT,OAAO;AAAA,MACL,YAAY;AAAA;AAAA,IAId,OAAO;AAAA,MACL,iBAAiB,KAAK,MAAM,QAAQ,SAAS;AAAA;AAAA,IAI/C,QAAQ;AAAA,MACN,YAAY,MAAM,QAAQ;AAAA,MAC1B,aAAa,MAAM,QAAQ;AAAA;AAAA,IAI7B,UAAU;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA;AAAA,IAIT,UAAU;AAAA,MACR,WAAW;AAAA,MACX,QAAQ;AAAA;AAAA;AAAA;AAId,IAAI,UAAuB,AAAM,iBAAW,kBAAiB,OAAO,KAAK;AACvE,MAAI,kBAAkB,MAAM,UACxB,WAAW,oBAAoB,SAAS,QAAQ,iBAChD,UAAU,MAAM,SAChB,YAAY,MAAM,WAClB,mBAAmB,MAAM,WACzB,YAAY,qBAAqB,SAAS,OAAO,kBACjD,kBAAkB,MAAM,UACxB,WAAW,oBAAoB,SAAS,QAAQ,iBAChD,eAAe,MAAM,OACrB,QAAQ,iBAAiB,SAAS,QAAQ,cAC1C,qBAAqB,MAAM,aAC3B,cAAc,uBAAuB,SAAS,eAAe,oBAC7D,cAAc,MAAM,MACpB,OAAO,gBAAgB,SAAS,cAAc,OAAO,cAAc,SAAY,aAC/E,iBAAiB,MAAM,SACvB,UAAU,mBAAmB,SAAS,cAAc,gBACpD,QAAQ,yBAAyB,OAAO,CAAC,YAAY,WAAW,aAAa,aAAa,YAAY,SAAS,eAAe,QAAQ;AAE1I,SAAoB,AAAM,oBAAc,WAAW,SAAS;AAAA,IAC1D,WAAW,eAAK,QAAQ,MAAM,WAAW,YAAY,eAAe,QAAQ,UAAU,YAAY,QAAQ,UAAU,YAAY,QAAQ,UAAU,SAAS,QAAQ,OAAO,gBAAgB,cAAc,QAAQ;AAAA,IAChN;AAAA,IACA;AAAA,KACC;AAAA;AAEL,OAAwC,QAAQ,YAAY;AAAA,EAS1D,UAAU,0BAAU;AAAA,EAKpB,UAAU,0BAAU;AAAA,EAMpB,SAAS,0BAAU;AAAA,EAKnB,WAAW,0BAAU;AAAA,EAMrB,WAAW,0BAEV;AAAA,EAMD,UAAU,0BAAU;AAAA,EAKpB,OAAO,0BAAU;AAAA,EAKjB,aAAa,0BAAU,MAAM,CAAC,cAAc;AAAA,EAK5C,MAAM,0BAAU;AAAA,EAKhB,SAAS,0BAAU,MAAM,CAAC,aAAa,SAAS;AAAA,IAC9C;AACJ,IAAO,kBAAQ,mBAAW,QAAQ;AAAA,EAChC,MAAM;AAAA,GACL;",
  "names": []
}
