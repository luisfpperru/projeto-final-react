{
  "version": 3,
  "sources": ["../@material-ui/core/esm/utils/ownerDocument.js", "../@material-ui/core/esm/utils/createChainedFunction.js"],
  "sourcesContent": ["export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}", "/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}"],
  "mappings": ";;;;;AAAe,uBAAuB,MAAM;AAC1C,SAAO,QAAQ,KAAK,iBAAiB;AAAA;AADvC;AAAA;AAAA;AAAA;;;ACSe,iCAAiC;AAC9C,WAAS,OAAO,UAAU,QAAQ,QAAQ,IAAI,MAAM,OAAO,OAAO,GAAG,OAAO,MAAM,QAAQ;AACxF,UAAM,QAAQ,UAAU;AAAA;AAG1B,SAAO,MAAM,OAAO,SAAU,KAAK,MAAM;AACvC,QAAI,QAAQ,MAAM;AAChB,aAAO;AAAA;AAGT,QAAI,MAAuC;AACzC,UAAI,OAAO,SAAS,YAAY;AAC9B,gBAAQ,MAAM;AAAA;AAAA;AAIlB,WAAO,2BAA2B;AAChC,eAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,QAAQ,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,aAAK,SAAS,UAAU;AAAA;AAG1B,UAAI,MAAM,MAAM;AAChB,WAAK,MAAM,MAAM;AAAA;AAAA,KAElB,WAAY;AAAA;AAAA;AAjCjB;AAAA;AAAA;AAAA;",
  "names": []
}
